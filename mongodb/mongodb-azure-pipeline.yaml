trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  trivyVersion: 0.40.0
  ScanResultsPath: trivyScan
  deploy: true
  containerRegistry: 'ainhabacr.azurecr.io'
  azureACRResourceGroup: 'k8s-resource-group'
  ACR.Name: 'ainhabacr'
  Azure.ServiceConnection: 'ainhabacrconnection'

steps:

  #   Mongo DB Image will be downloaded from Docker Hub
  - task: DockerInstaller@0
    displayName: 'Install Docker 17.09.0-ce'

  - task: AzureCLI@2
    displayName: 'Login to Azure Container Registry'
    inputs:
      azureSubscription: 'Azure for Students(7263e463-da66-4888-a897-f34f5acea14b)'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az acr login --name $(ACR.Name)

  - script: |
      docker pull mongo
      sudo apt-get install rpm
       wget -q https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
       sudo dpkg -i trivy_$(trivyVersion)_Linux-64bit.deb
       mkdir $(ScanResultsPath)
       trivy image --scanners vuln,config,secret --severity CRITICAL,HIGH mongo
    displayName: 'Scan using Trivy scan'

  - task: AzureCLI@2
    displayName: 'Push Mongo Docker Image to ACR'
    inputs:
      azureSubscription: 'Azure for Students(7263e463-da66-4888-a897-f34f5acea14b)'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        docker tag mongo eadca2/mongo:stable
        docker push eadca2/mongo:stable
#
#  - task: Kubernetes@1
#    condition: eq(variables.deploy, true)
#    inputs:
#      connectionType: 'Kubernetes Service Connection'
#      kubernetesServiceEndpoint: 'MongoSvcConn'
#      namespace: 'mongo'
#      command: 'apply'
#      arguments: '-f $(Build.SourcesDirectory)/helm/templates/mongodb-secrets.yaml'
#      secretType: 'dockerRegistry'
#      containerRegistryType: 'Azure Container Registry'
#
#  - task: Kubernetes@1
#    condition: eq(variables.deploy, true)
#    inputs:
#      connectionType: 'Kubernetes Service Connection'
#      kubernetesServiceEndpoint: 'MongoSvcConn'
#      namespace: 'mongo'
#      command: 'apply'
#      arguments: '-f $(Build.SourcesDirectory)/mongodb/mongodb-deployment.yaml'
#      secretType: 'dockerRegistry'
#      containerRegistryType: 'Azure Container Registry'
